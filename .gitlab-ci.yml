image: node:latest 

stages:
  - build
  - test
  - deploy

cache:
  paths:
    - node_modules/

services:
  - mysql:5.7
  - docker:dind

before_script:
  - apt-get update && apt-get install -y python3-pip default-mysql-client
  - echo "Test"
  - cd ./client
  - npm install

build:
  stage: build
  script:
    - npm run build 

test:
  stage: test
  script:
  # Pass with no tests has been added because 
  # Pipeline was created before tests were properly added
    - echo "We need to add some tests lol then fix this"

    # Run Jest/React tests
    - npm test

    # SQL database creation
    - docker run --name mysql -e MYSQL_ROOT_PASSWORD=comsc -d mariadb:latest
    - sleep 20 # give the database some time to start up
    - docker exec -i mysql mysql -u root -pcomsc -e 'CREATE DATABASE app_db;'
    - docker exec -i mysql mysql -u root -pcomsc app_db < ../database/db_initialise.sql

    # Run flask server and unit tests
    - cd ..
    - cd ./flask-server
    - python3 server.py &
    - export SERVER_PID=$!
    - pip install pytest
    - pip install requests
    - python3 test_api.py

    # Stop services
    - kill $SERVER_PID
    - docker stop mysql


deploy:
  stage: deploy
  script:
  # in deploy just for testing, should probably be moved 
  # put these in requirements 
  # add them to build or something 
    - pip install --upgrade pip
    - pip install -r requirements.txt
    
    
    # Doing this in the pipeline is bad, but it works  
    # - python server.py &
    # - npm start
