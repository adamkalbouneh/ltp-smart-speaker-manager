image: node:latest 

stages:
  - build
  - test
  - deploy

cache:
  paths:
    - node_modules/

services:
  - mysql:5.7
  - docker:dind

before_script:
  - apt-get update && apt-get install -y python3-pip

build:
  stage: build
  script:
    - cd /client
    - npm run build 
  after_script:
    - cd ../

test:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t myapp .
    - docker run --name mysql -e MYSQL_ROOT_PASSWORD=comsc -d mariadb:latest
    - sleep 20
    - docker exec -i mysql localhost -u root -pcomsc -e 'CREATE DATABASE app_db;'
    - docker exec -i mysql localhost -u root -pcomsc app_db < database/db_initialise.sql
    - docker run --name myapp -d -p 5000:5000 --link mysql:mysql myapp
    - cd ./flask-server
    - pip install pytest
    - pytest test_api.py
  after_script:
    - docker stop myapp mysql
    - docker rm myapp mysql
    - cd ../

node_test:
  image: node:latest
  script:
    - cd /client
    - npm install
    - npm test
  after_script:
    - cd ../


deploy:
  stage: deploy
  script:
  # in deploy just for testing, should probably be moved 
  # put these in requirements 
  # add them to build or something 
    - pip install --upgrade pip
    - pip install -r requirements.txt
    
    
    # Doing this in the pipeline is bad, but it works  
    # - python server.py &
    # - npm start
